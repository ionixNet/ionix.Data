<#@ import namespace="System.Collections.Generic" #>
<#
fileManager.StartHeader();
// Copyright © Simon Hughes 2012
// v2.4.1
#>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier

using ionix.Data.Attributes;
using System;
<# if(ElementsToGenerate.HasFlag(Elements.Poco)){ #>
using System.Collections.Generic;
<# } #>
<# if((ElementsToGenerate.HasFlag(Elements.Context) || ElementsToGenerate.HasFlag(Elements.Poco)) && IsSupportedFrameworkVersion("4.5")){ #>
using System.ComponentModel.DataAnnotations.Schema;
<# } #>
<# if(ElementsToGenerate.HasFlag(Elements.Context) || ElementsToGenerate.HasFlag(Elements.UnitOfWork)){ #>
using System.Data.Entity;
<# } #>
<# if(ElementsToGenerate.HasFlag(Elements.PocoConfiguration)){ #>
using System.Data.Entity.ModelConfiguration;
<# } #>
<# if(AddWcfDataAttributes){ #>
using System.Runtime.Serialization;
<# } #>
<# if((ElementsToGenerate.HasFlag(Elements.PocoConfiguration) || ElementsToGenerate.HasFlag(Elements.Context) || ElementsToGenerate.HasFlag(Elements.UnitOfWork)) && 
      (!ElementsToGenerate.HasFlag(Elements.Poco) && !string.IsNullOrWhiteSpace(PocoNamespace))){ #>
using <#= PocoNamespace #>;
<# } #>
<# 	if(	ElementsToGenerate.HasFlag(Elements.PocoConfiguration) && 
        (!ElementsToGenerate.HasFlag(Elements.Context) && !string.IsNullOrWhiteSpace(ContextNamespace))){ #>
using <#= ContextNamespace #>;
<# } #>
<# 	if( ElementsToGenerate.HasFlag(Elements.Context) && 
        (!ElementsToGenerate.HasFlag(Elements.UnitOfWork) && !string.IsNullOrWhiteSpace(UnitOfWorkNamespace))){ #>
using <#= UnitOfWorkNamespace #>;
<# } #>
<# 	if( ElementsToGenerate.HasFlag(Elements.Context) && 
        (!ElementsToGenerate.HasFlag(Elements.PocoConfiguration) && !string.IsNullOrWhiteSpace(PocoConfigurationNamespace))){ #>
using <#= PocoConfigurationNamespace #>;
<# } #>
<# 	if(	ElementsToGenerate.HasFlag(Elements.PocoConfiguration)){
        switch (TargetFrameworkVersion)
        {
            case "4.0":#>
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;
<#              break;
            default: #>
//using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.DatabaseGeneratedOption;
<#              break;
        }
    }    
#>
<#if (!string.IsNullOrEmpty(CollectionTypeNamespace)){
        #>using <#=CollectionTypeNamespace#>;
<#}#>

namespace <#= Namespace #>
{
<#
 if(ElementsToGenerate.HasFlag(Elements.Poco)){
 if(!GenerateSeparateFiles) { #>

    // ************************************************************************
    // POCO classes

<# } #>
<#
foreach(Table tbl in from t in tables.Where(t => !t.IsMapping).OrderBy(x => x.NameHumanCase) select t)
{
#>
<# fileManager.StartNewFile(tbl.NameHumanCase + FileExtension); #>
<#if(IncludeComments){#>    // <#=tbl.Name#>
<# } #>
<# if(AddWcfDataAttributes) { #>    [DataContract<#=ExtraWcfDataContractAttributes#>]
<# } 
    WritePocoClassAttributes(tbl);#>
    public <# if(MakeClassesPartial) { #>partial <# } #>class <#=tbl.NameHumanCase#><#=WritePocoBaseClasses != null ? " : " + WritePocoBaseClasses(tbl) : "" #>
    {
<# WritePocoBaseClassBody(tbl); #>
<# int DataMemberOrder = 1;
foreach(Column col in tbl.Columns.OrderBy(x => x.Ordinal))
{
#>
<# if(AddWcfDataAttributes) { #>        [DataMember(Order = <#=DataMemberOrder++#>, IsRequired = <#=col.IsNullable ? "false" : "true"#>)]
<# } #>
        <#= WritePocoColumn(col) #>
<# if(AddWcfDataAttributes) { #>
<# } } #>
    }


<# } }
if(ElementsToGenerate.HasFlag(Elements.PocoConfiguration)){
if(!GenerateSeparateFiles) { #>
      }
<# } } #>
<# fileManager.StartFooter(); #>
}
<# fileManager.EndBlock();
if(GenerateSeparateFiles)
    fileManager.Process(); #>
